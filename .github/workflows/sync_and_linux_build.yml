on:
  push:
    branches:
      - master
jobs:
  my_job:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {name: "MINGW", os: "windows-latest", command: "-G", compiler: "MinGW Makefiles", makecommand: "make"}
        - {name: "MSVC", os: "windows-latest", command: "-G", compiler: "Visual Stuido 17 2022", makecommand: "cmake --build"}
        - {name: "LINUX", os: "ubuntu-latest", command: "", compiler: "", makecommand: "make"}
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2.4.0
      with:
        key: ${{ secrets.GITEE_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: GIT-CLONE
      run: |
        git config --global user.name "robot"
        git config --global user.email "libo_go@163.com"
        git clone git@gitee.com:shubci/libs.git
        mkdir module
        cd module
        git clone git@gitee.com:shubci/cjson.git cJSON
        git clone git@gitee.com:shubci/osal.git
        git clone git@gitee.com:shubci/trial_manager.git
        git clone git@gitee.com:shubci/device_manager.git
        git clone git@gitee.com:shubci/data_manager.git
        git clone git@gitee.com:shubci/Unity.git unittest

    - name: BUILD AND INSTALL
      run: |
        ls
        cd module
        cd cJSON
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cd ./build && ${{matrix.config.makecommand}} && make install
        cd ../../osal
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cd ./build && ${{matrix.config.makecommand}} && make install
        cd ../../unittest
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cd ./build && ${{matrix.config.makecommand}} && make install
        cd ../../trial_manager
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cd ./build && ${{matrix.config.makecommand}} && make install
        cd ../../device_manager
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cd ./build && ${{matrix.config.makecommand}} && make install
        cd ../../data_manager
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cd ./build && ${{matrix.config.makecommand}} && make install
        cd ../../../libs
        git status
        git add . && git commit -m "ci: auto build ${{matrix.config.os}} ${{matrix.config.name}} & publish"
        git push --force
        git log
      shell: pwsh
    - name: MINGW
      if: startsWith(matrix.config.name, 'MINGW')
      run: |
        ${{github.action_path}}
      shell: pwsh
    - name: MSVC
      if: startsWith(matrix.config.name, 'MSVC')
      run: |
        ${{github.action_path}}
      shell: pwsh
    - name: LINUX
      if: startsWith(matrix.config.name, 'LINUX')
      run: |
        ${{github.action_path}}
