on:
  push:
    branches:
      - master
jobs:
  my_job:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: "MINGW", os: "windows-latest", command: "-G", compiler: "MinGW Makefiles"}
        - {name: "MSVC", os: "windows-latest", command: "-G", compiler: "Visual Studio 17 2022"}
        - {name: "LINUX", os: "ubuntu-latest", command: "", compiler: ""}
    steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2.4.0
      with:
        key: ${{ secrets.GITEE_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: GIT-CLONE
      run: |
        git config --global user.name "robot"
        git config --global user.email "libo_go@163.com"
        git clone git@gitee.com:shubci/libs.git
        mkdir module
        cd module
        git clone git@gitee.com:shubci/cjson.git cJSON
        git clone git@gitee.com:shubci/osal.git
        git clone git@gitee.com:shubci/trial_manager.git
        git clone git@gitee.com:shubci/device_manager.git
        git clone git@gitee.com:shubci/data_manager.git
        git clone git@gitee.com:shubci/Unity.git unittest

    - name: BUILD AND INSTALL
      run: |
        ls
        cd module
        cd cJSON
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cmake --build ./build && cmake --build ./build --target install 
        cd ../osal
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cmake --build ./build && cmake --build ./build --target install 
        cd ../unittest
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cmake --build ./build && cmake --build ./build --target install 
        cd ../trial_manager
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cmake --build ./build && cmake --build ./build --target install 
        cd ../device_manager
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cmake --build ./build && cmake --build ./build --target install 
        cd ../data_manager
        git submodule update --init --recursive
        cmake ${{matrix.config.command}} "${{matrix.config.compiler}}" -S . -B ./build && cmake --build ./build && cmake --build ./build --target install 
        cd ../../libs
        git status
        git add --all && git commit -m "ci: auto build ${{matrix.config.os}} ${{matrix.config.name}} & publish" && git push --force
        git log